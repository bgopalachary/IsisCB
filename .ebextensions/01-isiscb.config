option_settings:
  "aws:elasticbeanstalk:application:environment":
    DJANGO_SETTINGS_MODULE: "isiscb.production_settings"
    PYTHONPATH: "/opt/python/current/app/isiscb:$PYTHONPATH"

  "aws:elasticbeanstalk:container:python":
    WSGIPath: "isiscb/isiscb/wsgi.py"

Resources:
  sslSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: {"Fn::GetAtt" : ["AWSEBSecurityGroup", "GroupId"]}
      IpProtocol: tcp
      ToPort: 443
      FromPort: 443
      CidrIp: 0.0.0.0/0
  AWSEBAutoScalingGroup:
    Metadata:
      AWS::CloudFormation::Authentication:
        S3Auth:
          type: "s3"
          buckets: ["elasticbeanstalk-us-west-2-655333410217"]
          roleName:
            "Fn::GetOptionSetting":
              Namespace: "aws:autoscaling:launchconfiguration"
              OptionName: "IamInstanceProfile"
              DefaultValue: "aws-elasticbeanstalk-ec2-role"

files:
  /etc/httpd/conf.d/ssl.conf:
    mode: "000644"
    owner: root
    group: root
    content: |
      LoadModule wsgi_module modules/mod_wsgi.so
      WSGIPythonHome /opt/python/run/baselinenv
      WSGISocketPrefix run/wsgi
      WSGIRestrictEmbedded On
      Listen 443
      <VirtualHost *:443>
        SSLEngine on
        SSLCertificateFile "/etc/pki/tls/certs/server.crt"
        SSLCertificateKeyFile "/etc/pki/tls/certs/server.key"

        Alias /static/ /opt/python/current/app/static/
        <Directory /opt/python/current/app/static>
        Order allow,deny
        Allow from all
        </Directory>

        WSGIScriptAlias / /opt/python/current/app/isiscb/isiscb/wsgi.py

        <Directory /opt/python/current/app>
        Require all granted
        </Directory>

        WSGIDaemonProcess wsgi-ssl processes=1 threads=15 display-name=%{GROUP} \
          python-path=/opt/python/current/app:/opt/python/run/venv/lib64/python2.7/site-packages \
          home=/opt/python/current/app \
          user=wsgi \
          group=wsgi
        WSGIProcessGroup wsgi-ssl

      </VirtualHost>

  /etc/pki/tls/certs/server.crt:
    mode: "000400"
    owner: root
    group: root
    content: |
      -----BEGIN CERTIFICATE-----
            MIIDMTCCAhkCAQAwgesxCzAJBgNVBAYTAlVTMREwDwYDVQQIEwhPa2xhaG9tYTEP
      MA0GA1UEBxMGTm9ybWFuMTQwMgYDVQQKEytJc2lzIEJpYmxpb2dyYXBoeSBvZiB0
      aGUgSGlzdG9yeSBvZiBTY2llbmNlMTQwMgYDVQQLEytJc2lzIEJpYmxpb2dyYXBo
      eSBvZiB0aGUgSGlzdG9yeSBvZiBTY2llbmNlMSwwKgYDVQQDEyNpc2lzY2Itc3Rh
      Z2luZy5lbGFzdGljYmVhbnN0YWxrLmNvbTEeMBwGCSqGSIb3DQEJARYPc3B3ZWxk
      b25Ab3UuZWR1MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtik6gvFy
      G6XNSOVruq88vxRFqK+S6jf3PhIEGxX65N1w0Qk8ejx5DP5hXyhGytLDIkCtjAMx
      bvBZ2eZ24YtHxMrbgDzXeFytgZhRCJ+bL6ElM6tcqOcpI9skFVC0UbKtsEywf/i1
      P0B3+UIAeHeylANxMe8h8HoEQ2XYCu+dVauR5TxYEDMYN/vseQfn6xxGhjAzqVVl
      NMrrYLW3FI7FMhthlO3PkAXZJFUam207WkYXeY93u1ccoyD11k+D0oNPCjZytxc2
      KkF9lrmzVMAtxFvyUgl5I32OgH4JXUPTV0vtH/4N0+vHOMPNTFqKg8DPfv4EAAqA
      Tegb0VQIPPZyUQIDAQABoAAwDQYJKoZIhvcNAQEFBQADggEBAFkBc73RJP+QT4wn
      d+POlLb5vlFyTi/IqceOM5yweTJvte5eF43yFBRMBWvN1pNZI7HcTibT5EzxqyDY
      P20JdUSfi14jIlBs9Q7b9WxUMv9zymM692qYQekCQm+z/av8U19ZtGdjelgx716p
      wzN6twylHDNugvBqEKehFSmSkycgiONjtnysqsnmeywp7+J2qX5dd89CUERfjQd9
      +N9SbvZ8JaxjwyUQmYNCDgKglNIU3S5QoehU0yfhPhUbcVSLR1XhUQWDs0q8zEc+
      +fWXft6awcYoyyCS/RMABiMjSyv3kmJ7KtCUth8uj+eHcq1b1tOyzHu7FErynqs6
      CTSs+jE=
      -----END CERTIFICATE-----

  /etc/pki/tls/certs/server.key:
    mode: "000400"
    owner: root
    group: root
    authentication: "S3Auth"
    source: https://s3-us-west-2.amazonaws.com/elasticbeanstalk-us-west-2-655333410217/ssl/privatekey.pem

container_commands:
  01_migrate:
    command: "source /opt/python/run/venv/bin/activate && cd isiscb && python manage.py migrate auth --noinput && python manage.py migrate --noinput"
    leader_only: true
  02_collectstatic:
    command: "source /opt/python/run/venv/bin/activate && cd isiscb && python manage.py collectstatic --noinput"
    leader_only: true
  03_createsu:
    command: "source /opt/python/run/venv/bin/activate && cd isiscb && python manage.py createsu"
    leader_only: true
  04_wsgipass:
    command: 'echo "WSGIPassAuthorization On" >> ../wsgi.conf'
  05_uninstall_pil:
    command: "source /opt/python/run/venv/bin/activate && yes | pip uninstall Pillow"
  06_reinstall_pil:
    command: "source /opt/python/run/venv/bin/activate && yes | pip install Pillow --no-cache-dir"
  07killhttpd:
    command: "killall httpd"
  08waitforhttpddeath:
    command: "sleep 3"

